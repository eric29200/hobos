diff -ruN musl-1.2.3/src/env/__init_tls.c musl-1.2.3-mine/src/env/__init_tls.c
--- musl-1.2.3/src/env/__init_tls.c	2022-04-07 19:12:40.000000000 +0200
+++ musl-1.2.3-mine/src/env/__init_tls.c	2022-07-17 21:53:16.453143006 +0200
@@ -87,6 +87,9 @@
 	size_t base = 0;
 	void *mem;
 
+	/* HACK : disable TLS */
+	return;
+
 	for (p=(void *)aux[AT_PHDR],n=aux[AT_PHNUM]; n; n--,p+=aux[AT_PHENT]) {
 		phdr = (void *)p;
 		if (phdr->p_type == PT_PHDR)
diff -ruN musl-1.2.3/src/env/__reset_tls.c musl-1.2.3-mine/src/env/__reset_tls.c
--- musl-1.2.3/src/env/__reset_tls.c	2022-04-07 19:12:40.000000000 +0200
+++ musl-1.2.3-mine/src/env/__reset_tls.c	2022-07-17 21:53:16.453143006 +0200
@@ -4,6 +4,9 @@
 
 void __reset_tls()
 {
+	/* HACK : disable TLS */
+	return;
+
 	pthread_t self = __pthread_self();
 	struct tls_module *p;
 	size_t i, n = self->dtv[0];
diff -ruN musl-1.2.3/src/errno/__errno_location.c musl-1.2.3-mine/src/errno/__errno_location.c
--- musl-1.2.3/src/errno/__errno_location.c	2022-04-07 19:12:40.000000000 +0200
+++ musl-1.2.3-mine/src/errno/__errno_location.c	2022-07-17 21:53:16.453143006 +0200
@@ -1,9 +1,12 @@
 #include <errno.h>
 #include "pthread_impl.h"
 
+int errno_global = 0;
+
 int *__errno_location(void)
 {
-	return &__pthread_self()->errno_val;
+	/* HACK : disable TLS */
+	return &errno_global;
 }
 
 weak_alias(__errno_location, ___errno_location);
diff -ruN musl-1.2.3/src/internal/locale_impl.h musl-1.2.3-mine/src/internal/locale_impl.h
--- musl-1.2.3/src/internal/locale_impl.h	2022-04-07 19:12:40.000000000 +0200
+++ musl-1.2.3-mine/src/internal/locale_impl.h	2022-07-17 21:54:19.328459872 +0200
@@ -37,9 +37,17 @@
 #define C_LOCALE ((locale_t)&__c_locale)
 #define UTF8_LOCALE ((locale_t)&__c_dot_utf8_locale)
 
-#define CURRENT_LOCALE (__pthread_self()->locale)
+/* HACK : disable TLS */
+//#define CURRENT_LOCALE (__pthread_self()->locale)
+//#define CURRENT_UTF8 (!!__pthread_self()->locale->cat[LC_CTYPE])
 
-#define CURRENT_UTF8 (!!__pthread_self()->locale->cat[LC_CTYPE])
+#ifdef __GNUC__
+__attribute__((const))
+#endif
+hidden locale_t *___locale_global_location(void);
+
+#define CURRENT_LOCALE (*___locale_global_location())
+#define CURRENT_UTF8 (!!CURRENT_LOCALE->cat[LC_CTYPE])
 
 #undef MB_CUR_MAX
 #define MB_CUR_MAX (CURRENT_UTF8 ? 4 : 1)
diff -ruN musl-1.2.3/src/internal/__locale_location.c musl-1.2.3-mine/src/internal/__locale_location.c
--- musl-1.2.3/src/internal/__locale_location.c	1970-01-01 01:00:00.000000000 +0100
+++ musl-1.2.3-mine/src/internal/__locale_location.c	2022-07-17 21:54:19.328459872 +0200
@@ -0,0 +1,10 @@
+#include <locale.h>
+
+locale_t locale_global;
+
+locale_t *__locale_global_location(void)
+{
+	return &locale_global;
+}
+
+weak_alias(__locale_global_location, ___locale_global_location);
diff -ruN musl-1.2.3/src/process/_Fork.c musl-1.2.3-mine/src/process/_Fork.c
--- musl-1.2.3/src/process/_Fork.c	2022-04-07 19:12:40.000000000 +0200
+++ musl-1.2.3-mine/src/process/_Fork.c	2022-07-17 21:53:16.453143006 +0200
@@ -22,11 +22,12 @@
 	ret = __syscall(SYS_clone, SIGCHLD, 0);
 #endif
 	if (!ret) {
-		pthread_t self = __pthread_self();
+		/* HACK : disable TLS */
+		/*pthread_t self = __pthread_self();
 		self->tid = __syscall(SYS_gettid);
 		self->robust_list.off = 0;
 		self->robust_list.pending = 0;
-		self->next = self->prev = self;
+		self->next = self->prev = self;*/
 		__thread_list_lock = 0;
 		libc.threads_minus_1 = 0;
 		if (libc.need_locks) libc.need_locks = -1;
diff -ruN musl-1.2.3/src/thread/pthread_setcancelstate.c musl-1.2.3-mine/src/thread/pthread_setcancelstate.c
--- musl-1.2.3/src/thread/pthread_setcancelstate.c	2022-04-07 19:12:40.000000000 +0200
+++ musl-1.2.3-mine/src/thread/pthread_setcancelstate.c	2022-07-17 21:53:16.457143217 +0200
@@ -2,6 +2,9 @@
 
 int __pthread_setcancelstate(int new, int *old)
 {
+	/* HACK : disable TLS */
+	return 0;
+
 	if (new > 2U) return EINVAL;
 	struct pthread *self = __pthread_self();
 	if (old) *old = self->canceldisable;
